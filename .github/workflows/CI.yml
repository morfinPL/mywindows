name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Versions:
    runs-on: [self-hosted, Windows, X64]
    steps:
      - uses: actions/checkout@v3
      - name: Container setup
        run: docker run --detach --tty --interactive --name mywindows morfin/mywindows:Git_2.39.2_Python_3.11.2_CMake_3.25.2_VS_16_OpenCV_4.7.0_Catch_v3.3.1_Release powershell
      - name: Python
        run: docker exec mywindows python --version
      - name: CMake
        run: docker exec mywindows cmake -version
      - name: OpenCV Python
        run: >
          docker exec mywindows powershell "
          'import cv2' | Out-File -Encoding UTF8 -FilePath cv.py ;
          'print(''OpenCV '' + cv2.__version__)' | Out-File -Encoding UTF8 -Append -FilePath cv.py ;
          python cv.py ;
          Remove-Item cv.py ; "
      - name: OpenCV C++
        run: >
          docker exec mywindows powershell '
          mkdir OpenCVTest ;
          cd OpenCVTest ;
          ''project(OpenCVTest)'' | Out-File -Encoding UTF8 -FilePath CMakeLists.txt ;
          ''cmake_minimum_required(VERSION 3.25)'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''find_package(OpenCV REQUIRED)'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("OpenCV_VERSION: ${OpenCV_VERSION}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("OpenCV_SHARED: ${OpenCV_SHARED}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("OpenCV_INSTALL_PATH: ${OpenCV_INSTALL_PATH}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("OpenCV_INCLUDE_DIRS: ${OpenCV_INCLUDE_DIRS}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("OpenCV_COMPUTE_CAPABILITIES: ${OpenCV_COMPUTE_CAPABILITIES}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("OpenCV_LIB_COMPONENTS: ${OpenCV_LIB_COMPONENTS}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          cmake . ;
          cd .. ;
          Remove-Item -Recurse -Force OpenCVTest ;
          '
      - name: Catch2 C++
        run: >
          docker exec --workdir 'C:\Catch2Test' mywindows powershell '
          mkdir Catch2Test ;
          cd Catch2Test ;
          ''project(Catch2Test)'' | Out-File -Encoding UTF8 -FilePath CMakeLists.txt ;
          ''cmake_minimum_required(VERSION 3.25)'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''find_package(Catch2 REQUIRED)'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("Catch2_VERSION: ${Catch2_VERSION}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''get_property(Catch2_TARGETS DIRECTORY "${CMAKE_SOURCE_DIR}" PROPERTY IMPORTED_TARGETS)'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          ''message("Catch2_TARGETS: ${Catch2_TARGETS}")'' | Out-File -Encoding UTF8 -Append -FilePath CMakeLists.txt ;
          cmake . ;
          cd .. ;
          Remove-Item -Recurse -Force Catch2Test ;
          '
      - name: Clean container
        if: success() || failure()
        run: docker container stop mywindows ; docker container rm mywindows
